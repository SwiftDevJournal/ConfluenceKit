// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.User.Access {
    public var checkAccessByEmail: CheckAccessByEmail {
        CheckAccessByEmail(path: path + "/check-access-by-email")
    }

    public struct CheckAccessByEmail {
        /// Path: `/user/access/check-access-by-email`
        public let path: String

        /// Check site access for a list of emails
        ///
        /// Returns the list of emails from the input list that do not have access to site.
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to access the Confluence site ('Can use' global permission).
        public func post(emails: [String]) -> Request<PostResponse> {
            Request(path: path, method: "POST", body: ["emails": emails], id: "checkAccessByEmail")
        }

        public struct PostResponse: Decodable {
            /// List of emails that do not have access to site.
            public var emailsWithoutAccess: [String]?
            /// List of invalid emails provided in the request.
            public var invalidEmails: [String]?

            public init(emailsWithoutAccess: [String]? = nil, invalidEmails: [String]? = nil) {
                self.emailsWithoutAccess = emailsWithoutAccess
                self.invalidEmails = invalidEmails
            }

            public init(from decoder: Decoder) throws {
                let values = try decoder.container(keyedBy: StringCodingKey.self)
                self.emailsWithoutAccess = try values.decodeIfPresent([String].self, forKey: "emailsWithoutAccess")
                self.invalidEmails = try values.decodeIfPresent([String].self, forKey: "invalidEmails")
            }
        }
    }
}
