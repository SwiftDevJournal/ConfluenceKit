// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Blogposts.WithBlogpostID.Properties {
    public func propertyID(_ propertyID: Int) -> WithPropertyID {
        WithPropertyID(path: "\(path)/\(propertyID)")
    }

    public struct WithPropertyID {
        /// Path: `/blogposts/{blogpost-id}/properties/{property-id}`
        public let path: String

        /// Get content property for blog post by id
        ///
        /// Retrieves a specific Content Property by ID that is attached to a specified blog post.
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to view the blog post.
        public var get: Request<ConfluenceKit.ContentProperty> {
            Request(path: path, method: "GET", id: "getBlogpostContentPropertiesById")
        }

        public enum GetResponseHeaders {
            /// This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. Example response header format: `Link: </wiki/api/v2/blogposts/<blogpost-id>/properties/<property-id>?cursor=<opaque cursor token>>; rel="next", <https://site.atlassian.net/wiki>; rel="base"`
            public static let link = HTTPHeader<String>(field: "Link")
        }

        /// Update content property for blog post by id
        ///
        /// Update a content property for blog post by its id. 
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to edit the blog post.
        public func put(_ body: ConfluenceKit.ContentPropertyUpdateRequest) -> Request<ConfluenceKit.ContentProperty> {
            Request(path: path, method: "PUT", body: body, id: "updateBlogpostPropertyById")
        }

        /// Delete content property for blogpost by id
        ///
        /// Deletes a content property for a blogpost by its id. 
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to edit the blog post.
        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "deleteBlogpostPropertyById")
        }
    }
}
