// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Spaces.WithSpaceID.Properties {
    public func propertyID(_ propertyID: Int) -> WithPropertyID {
        WithPropertyID(path: "\(path)/\(propertyID)")
    }

    public struct WithPropertyID {
        /// Path: `/spaces/{space-id}/properties/{property-id}`
        public let path: String

        /// Get space property by id
        ///
        /// Retrieve a space property by its id. 
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.
        public var get: Request<ConfluenceKit.SpaceProperty> {
            Request(path: path, method: "GET", id: "getSpacePropertyById")
        }

        /// Update space property by id
        ///
        /// Update a space property by its id. 
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.
        public func put(_ body: ConfluenceKit.SpacePropertyUpdateRequest) -> Request<ConfluenceKit.SpaceProperty> {
            Request(path: path, method: "PUT", body: body, id: "updateSpacePropertyById")
        }

        public enum PutResponseHeaders {
            public static let location = HTTPHeader<String>(field: "location")
        }

        /// Delete space property by id
        ///
        /// Deletes a space property by its id. 
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.
        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "deleteSpacePropertyById")
        }
    }
}
