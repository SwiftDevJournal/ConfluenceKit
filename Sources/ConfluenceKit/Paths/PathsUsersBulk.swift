// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths {
    public static var usersBulk: UsersBulk {
        UsersBulk(path: "/users-bulk")
    }

    public struct UsersBulk {
        /// Path: `/users-bulk`
        public let path: String

        /// Create bulk user lookup using ids
        ///
        /// Returns user details for the ids provided in the request body.
        /// 
        /// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        /// Permission to access the Confluence site ('Can use' global permission).
        /// The user must be able to view user profiles in the Confluence site.
        public func post(accountIDs: [String]) -> Request<PostResponse> {
            Request(path: path, method: "POST", body: ["accountIds": accountIDs], id: "createBulkUserLookup")
        }

        /// MultiEntityResult<User>
        public struct PostResponse: Decodable {
            public var results: [ConfluenceKit.User]?
            public var links: ConfluenceKit.MultiEntityLinks?

            public init(results: [ConfluenceKit.User]? = nil, links: ConfluenceKit.MultiEntityLinks? = nil) {
                self.results = results
                self.links = links
            }

            public init(from decoder: Decoder) throws {
                let values = try decoder.container(keyedBy: StringCodingKey.self)
                self.results = try values.decodeIfPresent([ConfluenceKit.User].self, forKey: "results")
                self.links = try values.decodeIfPresent(ConfluenceKit.MultiEntityLinks.self, forKey: "_links")
            }
        }

        public enum PostResponseHeaders {
            /// This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. Example response header format: <https://site.atlassian.net/wiki>; rel="base"`
            public static let link = HTTPHeader<String>(field: "Link")
        }
    }
}
